<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">  
  <modelVersion>4.0.0</modelVersion>  
  <parent> 
    <groupId>org.springframework.boot</groupId>  
    <artifactId>spring-boot-starter-parent</artifactId>  
    <version>2.7.5</version>  
    <relativePath/>  
    <!-- lookup parent from repository --> 
  </parent>  
  <groupId>com.example</groupId>  
  <artifactId>sampledeploy</artifactId>  
  <version>0.0.1-SNAPSHOT</version>  
  <name>sampledeploy</name>  
  <description>Demo project for Spring Boot</description>  
  <properties> 
    <java.version>11</java.version>  
    <vaadin.version>23.2.2</vaadin.version>  
    <sonar.organization>basilroy1</sonar.organization>  
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>  
    <jacoco.version>0.8.8</jacoco.version>  
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>  
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>  
    <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>  
    <sonar.language>java</sonar.language> 
  </properties>
  <dependencies>
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-web</artifactId> 
    </dependency>  
    <dependency> 
      <groupId>org.projectlombok</groupId>  
      <artifactId>lombok</artifactId>  
      <optional>true</optional> 
    </dependency>  
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-test</artifactId>  
      <scope>test</scope> 
    </dependency>  
    <dependency> 
      <groupId>com.vaadin</groupId>  
      <artifactId>vaadin-spring-boot-starter</artifactId> 
    </dependency>  
    <dependency> 
      <groupId>org.junit.jupiter</groupId>  
      <artifactId>junit-jupiter</artifactId>  
      <version>5.9.1</version>  
      <scope>test</scope> 
    </dependency>  
    <!--<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>-->  
    <!--<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>3.0.0-M7</version>
			<type>maven-plugin</type>
		</dependency>-->  
    <dependency> 
      <groupId>io.cucumber</groupId>  
      <artifactId>cucumber-junit-platform-engine</artifactId>  
      <version>7.9.0</version>  
      <scope>test</scope> 
    </dependency>  
    <dependency> 
      <groupId>io.cucumber</groupId>  
      <artifactId>cucumber-junit</artifactId>  
      <version>7.9.0</version>  
      <scope>test</scope> 
    </dependency>  
    <dependency> 
      <groupId>io.cucumber</groupId>  
      <artifactId>cucumber-java</artifactId>  
      <version>7.9.0</version>  
      <scope>test</scope> 
    </dependency>  
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-devtools</artifactId>  
      <scope>runtime</scope>  
      <optional>true</optional> 
    </dependency>  
    <dependency> 
      <groupId>com.vaadin</groupId>  
      <artifactId>vaadin-charts-flow</artifactId> 
    </dependency>  
    <dependency> 
      <groupId>org.jacoco</groupId>  
      <artifactId>jacoco-maven-plugin</artifactId>  
      <version>${jacoco.version}</version> 
    </dependency>  
    <dependency> 
      <groupId>org.apache.maven.plugins</groupId>  
      <artifactId>maven-checkstyle-plugin</artifactId>  
      <version>3.2.0</version> 
    </dependency>  
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-test</artifactId>  
      <scope>test</scope> 
    </dependency>  
    <dependency> 
      <groupId>org.junit.vintage</groupId>  
      <artifactId>junit-vintage-engine</artifactId>  
      <version>5.9.1</version>  
      <scope>test</scope> 
    </dependency>  
    <dependency> 
      <groupId>org.mockito</groupId>  
      <artifactId>mockito-core</artifactId>  
      <version>4.8.0</version>  
      <scope>test</scope> 
    </dependency>
    <!-- new line to test-->
    <dependency>
      <groupId>com.vaadin</groupId>
      <!-- Replace artifactId with vaadin-core to use only free components -->
      <artifactId>vaadin</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-testbench</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Include JUnit 4 support for TestBench and others -->
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.github.bonigarcia</groupId>
      <artifactId>webdrivermanager</artifactId>
      <version>5.1.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <repositories>
    <!-- The order of definitions matters. Explicitly defining central here to make sure it has the highest priority. -->
    <!-- Main Maven repository -->
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>vaadin-prereleases</id>
      <url>https://maven.vaadin.com/vaadin-prereleases/</url>
    </repository>
    <!-- Repository used by many Vaadin add-ons -->
    <repository>
      <id>Vaadin Directory</id>
      <url>https://maven.vaadin.com/vaadin-addons</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <!-- The order of definitions matters. Explicitly defining central here to make sure it has the highest priority. -->
    <pluginRepository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>vaadin-prereleases</id>
      <url>https://maven.vaadin.com/vaadin-prereleases/</url>
    </pluginRepository>
  </pluginRepositories>
  <dependencyManagement> 
    <dependencies> 
      <dependency> 
        <groupId>com.vaadin</groupId>  
        <artifactId>vaadin-bom</artifactId>  
        <version>${vaadin.version}</version>  
        <type>pom</type>  
        <scope>import</scope> 
      </dependency> 
    </dependencies> 
  </dependencyManagement>

  <build>
    <defaultGoal>spring-boot:run</defaultGoal>
    <plugins>
      <plugin>
        <groupId>com.microsoft.azure</groupId>
        <artifactId>azure-webapp-maven-plugin</artifactId>
        <version>2.2.3</version>
        <configuration>
          <schemaVersion>v2</schemaVersion>
          <subscriptionId>a9d42e76-1325-4cdb-b463-a5cfb7d77ecc</subscriptionId>
          <resourceGroup>b_group</resourceGroup>
          <appName>blood-pressure-calculator</appName>
          <pricingTier>F1</pricingTier>
          <region>westeurope</region>
          <appServicePlanName>ASP-bgroup-bd9e</appServicePlanName>
          <appServicePlanResourceGroup>b_group</appServicePlanResourceGroup>
          <runtime>
            <os>Linux</os>
            <javaVersion>Java 11</javaVersion>
            <webContainer>Java SE</webContainer>
          </runtime>
          <deployment>
            <resources>
              <resource>
                <directory>${project.basedir}/target</directory>
                <includes>
                  <include>*.jar</include>
                </includes>
              </resource>
            </resources>
          </deployment>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <!-- Clean build and startup time for Vaadin apps sometimes may exceed
                     the default Spring Boot's 30sec timeout.  -->
        <configuration>
          <jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5171</jvmArguments>
          <wait>500</wait>
          <maxAttempts>240</maxAttempts>
        </configuration>
      </plugin>
      <!--
                Take care of synchronizing java dependencies and imports in
                package.json and main.js files.
                It also creates webpack.config.js if not exists yet.
            -->
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>${vaadin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-frontend</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <excludes>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
            </excludes>
          </configuration>
        </plugin>

    </plugins>
  </build>

  <!--<build>
    <plugins>
      <plugin> 
        <groupId>org.springframework.boot</groupId>  
        <artifactId>spring-boot-maven-plugin</artifactId>  
        <configuration> 
          <excludes> 
            <exclude> 
              <groupId>org.projectlombok</groupId>  
              <artifactId>lombok</artifactId> 
            </exclude> 
          </excludes> 
        </configuration> 
      </plugin> 
    </plugins> 
  </build>-->

  <profiles>
    <profile>
      <!-- Production mode is activated using -Pproduction -->
      <id>production</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-maven-plugin</artifactId>
            <version>${vaadin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>build-frontend</goal>
                </goals>
                <phase>compile</phase>
              </execution>
            </executions>
            <configuration>
              <productionMode>true</productionMode>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>it</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-spring-boot</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-spring-boot</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Runs the integration tests (*IT) after the server is started -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <trimStackTrace>false</trimStackTrace>
              <enableAssertions>true</enableAssertions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
